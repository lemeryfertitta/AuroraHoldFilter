import React, { useEffect, useState, useRef } from "react";
import Peer from "peerjs";

const defaultElementId = "svg-hold-filter";
const defaultImagesToHolds = {
  "https://api.kilterboardapp.com/img/product_sizes_layouts_sets/39-1.png": [
    [1073, null, 136, 8],
    [1074, null, 128, 8],
    [1075, null, 120, 8],
    [1076, null, 112, 8],
    [1077, null, 104, 8],
    [1078, null, 96, 8],
    [1079, null, 88, 8],
    [1080, null, 80, 8],
    [1081, null, 72, 8],
    [1082, null, 64, 8],
    [1083, null, 56, 8],
    [1084, null, 48, 8],
    [1085, null, 40, 8],
    [1086, null, 32, 8],
    [1087, null, 24, 8],
    [1088, null, 16, 8],
    [1089, null, 8, 8],
    [1090, null, 8, 16],
    [1107, null, 8, 24],
    [1124, null, 8, 32],
    [1141, null, 8, 40],
    [1158, null, 8, 48],
    [1175, null, 8, 56],
    [1192, null, 8, 64],
    [1209, null, 8, 72],
    [1226, null, 8, 80],
    [1243, null, 8, 88],
    [1260, null, 8, 96],
    [1277, null, 8, 104],
    [1294, null, 8, 112],
    [1311, null, 8, 120],
    [1328, null, 8, 128],
    [1345, null, 8, 136],
    [1362, null, 8, 144],
    [1379, null, 8, 152],
    [1396, null, 8, 160],
    [1413, null, 8, 168],
    [1430, null, 8, 176],
    [1431, null, 16, 176],
    [1414, null, 16, 168],
    [1397, null, 16, 160],
    [1380, null, 16, 152],
    [1363, null, 16, 144],
    [1346, null, 16, 136],
    [1329, null, 16, 128],
    [1312, null, 16, 120],
    [1295, null, 16, 112],
    [1278, null, 16, 104],
    [1261, null, 16, 96],
    [1244, null, 16, 88],
    [1227, null, 16, 80],
    [1210, null, 16, 72],
    [1193, null, 16, 64],
    [1176, null, 16, 56],
    [1159, null, 16, 48],
    [1142, null, 16, 40],
    [1125, null, 16, 32],
    [1108, null, 16, 24],
    [1091, null, 16, 16],
    [1092, null, 24, 16],
    [1109, null, 24, 24],
    [1126, null, 24, 32],
    [1143, null, 24, 40],
    [1160, null, 24, 48],
    [1177, null, 24, 56],
    [1194, null, 24, 64],
    [1211, null, 24, 72],
    [1228, null, 24, 80],
    [1245, null, 24, 88],
    [1262, null, 24, 96],
    [1279, null, 24, 104],
    [1296, null, 24, 112],
    [1313, null, 24, 120],
    [1330, null, 24, 128],
    [1347, null, 24, 136],
    [1364, null, 24, 144],
    [1381, null, 24, 152],
    [1398, null, 24, 160],
    [1415, null, 24, 168],
    [1432, null, 24, 176],
    [1433, null, 32, 176],
    [1416, null, 32, 168],
    [1399, null, 32, 160],
    [1382, null, 32, 152],
    [1365, null, 32, 144],
    [1348, null, 32, 136],
    [1331, null, 32, 128],
    [1314, null, 32, 120],
    [1297, null, 32, 112],
    [1280, null, 32, 104],
    [1263, null, 32, 96],
    [1246, null, 32, 88],
    [1229, null, 32, 80],
    [1212, null, 32, 72],
    [1195, null, 32, 64],
    [1178, null, 32, 56],
    [1161, null, 32, 48],
    [1144, null, 32, 40],
    [1127, null, 32, 32],
    [1110, null, 32, 24],
    [1093, null, 32, 16],
    [1094, null, 40, 16],
    [1111, null, 40, 24],
    [1128, null, 40, 32],
    [1145, null, 40, 40],
    [1162, null, 40, 48],
    [1179, null, 40, 56],
    [1196, null, 40, 64],
    [1213, null, 40, 72],
    [1230, null, 40, 80],
    [1247, null, 40, 88],
    [1264, null, 40, 96],
    [1281, null, 40, 104],
    [1298, null, 40, 112],
    [1315, null, 40, 120],
    [1332, null, 40, 128],
    [1349, null, 40, 136],
    [1366, null, 40, 144],
    [1383, null, 40, 152],
    [1400, null, 40, 160],
    [1417, null, 40, 168],
    [1434, null, 40, 176],
    [1435, null, 48, 176],
    [1418, null, 48, 168],
    [1401, null, 48, 160],
    [1384, null, 48, 152],
    [1367, null, 48, 144],
    [1350, null, 48, 136],
    [1333, null, 48, 128],
    [1316, null, 48, 120],
    [1299, null, 48, 112],
    [1282, null, 48, 104],
    [1265, null, 48, 96],
    [1248, null, 48, 88],
    [1231, null, 48, 80],
    [1214, null, 48, 72],
    [1197, null, 48, 64],
    [1180, null, 48, 56],
    [1163, null, 48, 48],
    [1146, null, 48, 40],
    [1129, null, 48, 32],
    [1112, null, 48, 24],
    [1095, null, 48, 16],
    [1096, null, 56, 16],
    [1113, null, 56, 24],
    [1130, null, 56, 32],
    [1147, null, 56, 40],
    [1164, null, 56, 48],
    [1181, null, 56, 56],
    [1198, null, 56, 64],
    [1215, null, 56, 72],
    [1232, null, 56, 80],
    [1249, null, 56, 88],
    [1266, null, 56, 96],
    [1283, null, 56, 104],
    [1300, null, 56, 112],
    [1317, null, 56, 120],
    [1334, null, 56, 128],
    [1351, null, 56, 136],
    [1368, null, 56, 144],
    [1385, null, 56, 152],
    [1402, null, 56, 160],
    [1419, null, 56, 168],
    [1436, null, 56, 176],
    [1437, null, 64, 176],
    [1420, null, 64, 168],
    [1403, null, 64, 160],
    [1386, null, 64, 152],
    [1369, null, 64, 144],
    [1352, null, 64, 136],
    [1335, null, 64, 128],
    [1318, null, 64, 120],
    [1301, null, 64, 112],
    [1284, null, 64, 104],
    [1267, null, 64, 96],
    [1250, null, 64, 88],
    [1233, null, 64, 80],
    [1216, null, 64, 72],
    [1199, null, 64, 64],
    [1182, null, 64, 56],
    [1165, null, 64, 48],
    [1148, null, 64, 40],
    [1131, null, 64, 32],
    [1114, null, 64, 24],
    [1097, null, 64, 16],
    [1098, null, 72, 16],
    [1115, null, 72, 24],
    [1132, null, 72, 32],
    [1149, null, 72, 40],
    [1166, null, 72, 48],
    [1183, null, 72, 56],
    [1200, null, 72, 64],
    [1217, null, 72, 72],
    [1234, null, 72, 80],
    [1251, null, 72, 88],
    [1268, null, 72, 96],
    [1285, null, 72, 104],
    [1302, null, 72, 112],
    [1319, null, 72, 120],
    [1336, null, 72, 128],
    [1353, null, 72, 136],
    [1370, null, 72, 144],
    [1387, null, 72, 152],
    [1404, null, 72, 160],
    [1421, null, 72, 168],
    [1438, null, 72, 176],
    [1439, null, 80, 176],
    [1422, null, 80, 168],
    [1405, null, 80, 160],
    [1388, null, 80, 152],
    [1371, null, 80, 144],
    [1354, null, 80, 136],
    [1337, null, 80, 128],
    [1320, null, 80, 120],
    [1303, null, 80, 112],
    [1286, null, 80, 104],
    [1269, null, 80, 96],
    [1252, null, 80, 88],
    [1235, null, 80, 80],
    [1218, null, 80, 72],
    [1201, null, 80, 64],
    [1184, null, 80, 56],
    [1167, null, 80, 48],
    [1150, null, 80, 40],
    [1133, null, 80, 32],
    [1116, null, 80, 24],
    [1099, null, 80, 16],
    [1100, null, 88, 16],
    [1117, null, 88, 24],
    [1134, null, 88, 32],
    [1151, null, 88, 40],
    [1168, null, 88, 48],
    [1185, null, 88, 56],
    [1202, null, 88, 64],
    [1219, null, 88, 72],
    [1236, null, 88, 80],
    [1253, null, 88, 88],
    [1270, null, 88, 96],
    [1287, null, 88, 104],
    [1304, null, 88, 112],
    [1321, null, 88, 120],
    [1338, null, 88, 128],
    [1355, null, 88, 136],
    [1372, null, 88, 144],
    [1389, null, 88, 152],
    [1406, null, 88, 160],
    [1423, null, 88, 168],
    [1440, null, 88, 176],
    [1441, null, 96, 176],
    [1424, null, 96, 168],
    [1407, null, 96, 160],
    [1390, null, 96, 152],
    [1373, null, 96, 144],
    [1356, null, 96, 136],
    [1339, null, 96, 128],
    [1322, null, 96, 120],
    [1305, null, 96, 112],
    [1288, null, 96, 104],
    [1271, null, 96, 96],
    [1254, null, 96, 88],
    [1237, null, 96, 80],
    [1220, null, 96, 72],
    [1203, null, 96, 64],
    [1186, null, 96, 56],
    [1169, null, 96, 48],
    [1152, null, 96, 40],
    [1135, null, 96, 32],
    [1118, null, 96, 24],
    [1101, null, 96, 16],
    [1102, null, 104, 16],
    [1119, null, 104, 24],
    [1136, null, 104, 32],
    [1153, null, 104, 40],
    [1170, null, 104, 48],
    [1187, null, 104, 56],
    [1204, null, 104, 64],
    [1221, null, 104, 72],
    [1238, null, 104, 80],
    [1255, null, 104, 88],
    [1272, null, 104, 96],
    [1289, null, 104, 104],
    [1306, null, 104, 112],
    [1323, null, 104, 120],
    [1340, null, 104, 128],
    [1357, null, 104, 136],
    [1374, null, 104, 144],
    [1391, null, 104, 152],
    [1408, null, 104, 160],
    [1425, null, 104, 168],
    [1442, null, 104, 176],
    [1443, null, 112, 176],
    [1426, null, 112, 168],
    [1409, null, 112, 160],
    [1392, null, 112, 152],
    [1375, null, 112, 144],
    [1358, null, 112, 136],
    [1341, null, 112, 128],
    [1324, null, 112, 120],
    [1307, null, 112, 112],
    [1290, null, 112, 104],
    [1273, null, 112, 96],
    [1256, null, 112, 88],
    [1239, null, 112, 80],
    [1222, null, 112, 72],
    [1205, null, 112, 64],
    [1188, null, 112, 56],
    [1171, null, 112, 48],
    [1154, null, 112, 40],
    [1137, null, 112, 32],
    [1120, null, 112, 24],
    [1103, null, 112, 16],
    [1104, null, 120, 16],
    [1121, null, 120, 24],
    [1138, null, 120, 32],
    [1155, null, 120, 40],
    [1172, null, 120, 48],
    [1189, null, 120, 56],
    [1206, null, 120, 64],
    [1223, null, 120, 72],
    [1240, null, 120, 80],
    [1257, null, 120, 88],
    [1274, null, 120, 96],
    [1291, null, 120, 104],
    [1308, null, 120, 112],
    [1325, null, 120, 120],
    [1342, null, 120, 128],
    [1359, null, 120, 136],
    [1376, null, 120, 144],
    [1393, null, 120, 152],
    [1410, null, 120, 160],
    [1427, null, 120, 168],
    [1444, null, 120, 176],
    [1445, null, 128, 176],
    [1428, null, 128, 168],
    [1411, null, 128, 160],
    [1394, null, 128, 152],
    [1377, null, 128, 144],
    [1360, null, 128, 136],
    [1343, null, 128, 128],
    [1326, null, 128, 120],
    [1309, null, 128, 112],
    [1292, null, 128, 104],
    [1275, null, 128, 96],
    [1258, null, 128, 88],
    [1241, null, 128, 80],
    [1224, null, 128, 72],
    [1207, null, 128, 64],
    [1190, null, 128, 56],
    [1173, null, 128, 48],
    [1156, null, 128, 40],
    [1139, null, 128, 32],
    [1122, null, 128, 24],
    [1105, null, 128, 16],
    [1106, null, 136, 16],
    [1123, null, 136, 24],
    [1140, null, 136, 32],
    [1157, null, 136, 40],
    [1174, null, 136, 48],
    [1191, null, 136, 56],
    [1208, null, 136, 64],
    [1225, null, 136, 72],
    [1242, null, 136, 80],
    [1259, null, 136, 88],
    [1276, null, 136, 96],
    [1293, null, 136, 104],
    [1310, null, 136, 112],
    [1327, null, 136, 120],
    [1344, null, 136, 128],
    [1361, null, 136, 136],
    [1378, null, 136, 144],
    [1395, null, 136, 152],
    [1412, null, 136, 160],
    [1429, null, 136, 168],
    [1446, null, 136, 176],
    [4681, null, 0, 8],
    [4682, null, 0, 16],
    [4683, null, 0, 24],
    [4684, null, 0, 32],
    [4685, null, 0, 40],
    [4686, null, 0, 48],
    [4687, null, 0, 56],
    [4688, null, 0, 64],
    [4689, null, 0, 72],
    [4690, null, 0, 80],
    [4691, null, 0, 88],
    [4692, null, 0, 96],
    [4693, null, 0, 104],
    [4694, null, 0, 112],
    [4695, null, 0, 120],
    [4696, null, 0, 128],
    [4697, null, 0, 136],
    [4698, null, 0, 144],
    [4699, null, 0, 152],
    [4700, null, -8, 8],
    [4701, null, -8, 16],
    [4702, null, -8, 24],
    [4703, null, -8, 32],
    [4704, null, -8, 40],
    [4705, null, -8, 48],
    [4706, null, -8, 56],
    [4707, null, -8, 64],
    [4708, null, -8, 72],
    [4709, null, -8, 80],
    [4710, null, -8, 88],
    [4711, null, -8, 96],
    [4712, null, -8, 104],
    [4713, null, -8, 112],
    [4714, null, -8, 120],
    [4715, null, -8, 128],
    [4716, null, -8, 136],
    [4717, null, -8, 144],
    [4718, null, -8, 152],
    [4719, null, -16, 8],
    [4720, null, -16, 16],
    [4721, null, -16, 24],
    [4722, null, -16, 32],
    [4723, null, -16, 40],
    [4724, null, -16, 48],
    [4725, null, -16, 56],
    [4726, null, -16, 64],
    [4727, null, -16, 72],
    [4728, null, -16, 80],
    [4729, null, -16, 88],
    [4730, null, -16, 96],
    [4731, null, -16, 104],
    [4732, null, -16, 112],
    [4733, null, -16, 120],
    [4734, null, -16, 128],
    [4735, null, -16, 136],
    [4736, null, -16, 144],
    [4737, null, -16, 152],
    [4738, null, 144, 8],
    [4739, null, 144, 16],
    [4740, null, 144, 24],
    [4741, null, 144, 32],
    [4742, null, 144, 40],
    [4743, null, 144, 48],
    [4744, null, 144, 56],
    [4745, null, 144, 64],
    [4746, null, 144, 72],
    [4747, null, 144, 80],
    [4748, null, 144, 88],
    [4749, null, 144, 96],
    [4750, null, 144, 104],
    [4751, null, 144, 112],
    [4752, null, 144, 120],
    [4753, null, 144, 128],
    [4754, null, 144, 136],
    [4755, null, 144, 144],
    [4756, null, 144, 152],
    [4757, null, 152, 8],
    [4758, null, 152, 16],
    [4759, null, 152, 24],
    [4760, null, 152, 32],
    [4761, null, 152, 40],
    [4762, null, 152, 48],
    [4763, null, 152, 56],
    [4764, null, 152, 64],
    [4765, null, 152, 72],
    [4766, null, 152, 80],
    [4767, null, 152, 88],
    [4768, null, 152, 96],
    [4769, null, 152, 104],
    [4770, null, 152, 112],
    [4771, null, 152, 120],
    [4772, null, 152, 128],
    [4773, null, 152, 136],
    [4774, null, 152, 144],
    [4775, null, 152, 152],
    [4776, null, 160, 8],
    [4777, null, 160, 16],
    [4778, null, 160, 24],
    [4779, null, 160, 32],
    [4780, null, 160, 40],
    [4781, null, 160, 48],
    [4782, null, 160, 56],
    [4783, null, 160, 64],
    [4784, null, 160, 72],
    [4785, null, 160, 80],
    [4786, null, 160, 88],
    [4787, null, 160, 96],
    [4788, null, 160, 104],
    [4789, null, 160, 112],
    [4790, null, 160, 120],
    [4791, null, 160, 128],
    [4792, null, 160, 136],
    [4793, null, 160, 144],
    [4794, null, 160, 152],
  ],
  "https://api.kilterboardapp.com/img/product_sizes_layouts_sets/41-1.png": [
    [1447, null, 140, 4],
    [1448, null, 132, 4],
    [1449, null, 124, 4],
    [1450, null, 116, 4],
    [1451, null, 108, 4],
    [1452, null, 100, 4],
    [1453, null, 92, 4],
    [1454, null, 84, 4],
    [1455, null, 76, 4],
    [1456, null, 68, 4],
    [1457, null, 60, 4],
    [1458, null, 52, 4],
    [1459, null, 44, 4],
    [1460, null, 36, 4],
    [1461, null, 28, 4],
    [1462, null, 20, 4],
    [1463, null, 12, 4],
    [1464, null, 4, 4],
    [1465, null, 4, 20],
    [1474, null, 12, 28],
    [1483, null, 4, 36],
    [1492, null, 12, 44],
    [1501, null, 4, 52],
    [1510, null, 12, 60],
    [1519, null, 4, 68],
    [1528, null, 12, 76],
    [1537, null, 4, 84],
    [1546, null, 12, 92],
    [1555, null, 4, 100],
    [1564, null, 12, 108],
    [1573, null, 4, 116],
    [1582, null, 12, 124],
    [1591, null, 4, 132],
    [1592, null, 20, 132],
    [1574, null, 20, 116],
    [1556, null, 20, 100],
    [1538, null, 20, 84],
    [1520, null, 20, 68],
    [1502, null, 20, 52],
    [1484, null, 20, 36],
    [1466, null, 20, 20],
    [1475, null, 28, 28],
    [1493, null, 28, 44],
    [1511, null, 28, 60],
    [1529, null, 28, 76],
    [1547, null, 28, 92],
    [1565, null, 28, 108],
    [1583, null, 28, 124],
    [1593, null, 36, 132],
    [1575, null, 36, 116],
    [1557, null, 36, 100],
    [1539, null, 36, 84],
    [1521, null, 36, 68],
    [1503, null, 36, 52],
    [1485, null, 36, 36],
    [1467, null, 36, 20],
    [1476, null, 44, 28],
    [1494, null, 44, 44],
    [1512, null, 44, 60],
    [1530, null, 44, 76],
    [1548, null, 44, 92],
    [1566, null, 44, 108],
    [1584, null, 44, 124],
    [1594, null, 52, 132],
    [1576, null, 52, 116],
    [1558, null, 52, 100],
    [1540, null, 52, 84],
    [1522, null, 52, 68],
    [1504, null, 52, 52],
    [1486, null, 52, 36],
    [1468, null, 52, 20],
    [1477, null, 60, 28],
    [1495, null, 60, 44],
    [1513, null, 60, 60],
    [1531, null, 60, 76],
    [1549, null, 60, 92],
    [1567, null, 60, 108],
    [1585, null, 60, 124],
    [1595, null, 68, 132],
    [1577, null, 68, 116],
    [1559, null, 68, 100],
    [1541, null, 68, 84],
    [1523, null, 68, 68],
    [1505, null, 68, 52],
    [1487, null, 68, 36],
    [1469, null, 68, 20],
    [1478, null, 76, 28],
    [1496, null, 76, 44],
    [1514, null, 76, 60],
    [1532, null, 76, 76],
    [1550, null, 76, 92],
    [1568, null, 76, 108],
    [1586, null, 76, 124],
    [1596, null, 84, 132],
    [1578, null, 84, 116],
    [1560, null, 84, 100],
    [1542, null, 84, 84],
    [1524, null, 84, 68],
    [1506, null, 84, 52],
    [1488, null, 84, 36],
    [1470, null, 84, 20],
    [1479, null, 92, 28],
    [1497, null, 92, 44],
    [1515, null, 92, 60],
    [1533, null, 92, 76],
    [1551, null, 92, 92],
    [1569, null, 92, 108],
    [1587, null, 92, 124],
    [1597, null, 100, 132],
    [1579, null, 100, 116],
    [1561, null, 100, 100],
    [1543, null, 100, 84],
    [1525, null, 100, 68],
    [1507, null, 100, 52],
    [1489, null, 100, 36],
    [1471, null, 100, 20],
    [1480, null, 108, 28],
    [1498, null, 108, 44],
    [1516, null, 108, 60],
    [1534, null, 108, 76],
    [1552, null, 108, 92],
    [1570, null, 108, 108],
    [1588, null, 108, 124],
    [1598, null, 116, 132],
    [1580, null, 116, 116],
    [1562, null, 116, 100],
    [1544, null, 116, 84],
    [1526, null, 116, 68],
    [1508, null, 116, 52],
    [1490, null, 116, 36],
    [1472, null, 116, 20],
    [1481, null, 124, 28],
    [1499, null, 124, 44],
    [1517, null, 124, 60],
    [1535, null, 124, 76],
    [1553, null, 124, 92],
    [1571, null, 124, 108],
    [1589, null, 124, 124],
    [1599, null, 132, 132],
    [1581, null, 132, 116],
    [1563, null, 132, 100],
    [1545, null, 132, 84],
    [1527, null, 132, 68],
    [1509, null, 132, 52],
    [1491, null, 132, 36],
    [1473, null, 132, 20],
    [1482, null, 140, 28],
    [1500, null, 140, 44],
    [1518, null, 140, 60],
    [1536, null, 140, 76],
    [1554, null, 140, 92],
    [1572, null, 140, 108],
    [1590, null, 140, 124],
    [4795, null, -4, 4],
    [4796, null, -12, 4],
    [4797, null, -20, 4],
    [4798, null, 148, 4],
    [4799, null, 156, 4],
    [4800, null, 164, 4],
    [4801, null, -12, 20],
    [4802, null, -20, 28],
    [4803, null, -4, 28],
    [4804, null, -12, 36],
    [4805, null, -20, 44],
    [4806, null, -4, 44],
    [4807, null, -12, 52],
    [4808, null, -20, 60],
    [4809, null, -4, 60],
    [4810, null, -12, 68],
    [4811, null, -20, 76],
    [4812, null, -4, 76],
    [4813, null, -12, 84],
    [4814, null, -20, 92],
    [4815, null, -4, 92],
    [4816, null, -12, 100],
    [4817, null, -20, 108],
    [4818, null, -4, 108],
    [4819, null, -12, 116],
    [4820, null, -20, 124],
    [4821, null, -4, 124],
    [4822, null, -12, 132],
    [4823, null, 148, 20],
    [4824, null, 164, 20],
    [4825, null, 156, 28],
    [4826, null, 148, 36],
    [4827, null, 164, 36],
    [4828, null, 156, 44],
    [4829, null, 148, 52],
    [4830, null, 164, 52],
    [4831, null, 156, 60],
    [4832, null, 148, 68],
    [4833, null, 164, 68],
    [4834, null, 156, 76],
    [4835, null, 148, 84],
    [4836, null, 164, 84],
    [4837, null, 156, 92],
    [4838, null, 148, 100],
    [4839, null, 164, 100],
    [4840, null, 156, 108],
    [4841, null, 148, 116],
    [4842, null, 164, 116],
    [4843, null, 156, 124],
    [4844, null, 148, 132],
    [4845, null, 164, 132],
  ],
};

const KilterBoard = ({
  editEnabled = false,
  svgElementId = defaultElementId,
  imagesToHolds = defaultImagesToHolds,
  edgeLeft = 24,
  edgeRight = 120,
  edgeBottom = 0,
  edgeTop = 156,
  onCircleClick = undefined,
}) => {
  const [imageDimensions, setImageDimensions] = useState({});
  const [holdsData, setHoldsData] = useState([]);
  const peerRef = useRef(null);
  const connectionRef = useRef(null);
  const holdStates = {
    OFF: "OFF",
    STARTING: "STARTING",
    HAND: "HAND",
    FOOT: "FOOT",
    FINISH: "FINISH",
  };

  const holdColours = {
    OFF: null,
    STARTING: "#00DD00",
    HAND: "#00FFFF",
    FOOT: "#FFA500",
    FINISH: "#FF00FF",
  };

  useEffect(() => {
    const peer = new Peer(); // Create a new peer
    peerRef.current = peer;
    window.peer = peer;
    peer.on("open", (id) => {
      console.log("XXXX My peer ID is:", id);
      // Handle peer connections here
    });

    peer.on("connection", (conn) => {
      connectionRef.current = conn;
      conn.on("data", (data) => {
        console.log("Received data:", data);
        updateHoldFromPeer(data.holdId, data.state);
      });
    });

    // Optionally, connect to a specific peer
    // const conn = peer.connect('another-peers-id');
    // connectionRef.current = conn;
    // conn.on('open', () => {
    //   console.log('Connected to peer');
    // });

    return () => {
      peer.destroy(); // Clean up the peer connection when the component unmounts
    };
  }, []);

  useEffect(() => {
    const loadImages = async () => {
      const dimensions = {};

      for (const imageUrl of Object.keys(imagesToHolds)) {
        const image = new Image();
        await new Promise((resolve) => {
          image.onload = () => {
            dimensions[imageUrl] = { width: image.width, height: image.height };
            resolve();
          };
          image.src = imageUrl;
        });
      }

      setImageDimensions(dimensions);
    };

    loadImages();
  }, [imagesToHolds]);

  useEffect(() => {
    if (Object.keys(imageDimensions).length > 0) {
      const newHoldsData = [];

      for (const [imageUrl, holds] of Object.entries(imagesToHolds)) {
        const { width, height } = imageDimensions[imageUrl];
        const xSpacing = width / (edgeRight - edgeLeft);
        const ySpacing = height / (edgeTop - edgeBottom);

        holds.forEach(([holdId, mirroredHoldId, x, y]) => {
          if (x <= edgeLeft || x >= edgeRight || y <= edgeBottom || y >= edgeTop) {
            return;
          }

          const xPixel = (x - edgeLeft) * xSpacing;
          const yPixel = height - (y - edgeBottom) * ySpacing;

          newHoldsData.push({
            id: holdId,
            mirroredHoldId,
            cx: xPixel,
            cy: yPixel,
            r: xSpacing * 4,
            state: holdStates.OFF, // Initial state is OFF
          });
        });
      }

      setHoldsData(newHoldsData);
    }
  }, [imageDimensions, imagesToHolds, edgeLeft, edgeRight, edgeBottom, edgeTop]);

  const updateHoldFromPeer = (holdId, state) => {
    console.log(`${holdId} ${state}`);
    setHoldsData((prevHolds) =>
      prevHolds.map((hold) =>
        hold.id === holdId
          ? {
              ...hold,
              state,
            }
          : hold,
      ),
    );
  };

  const handleCircleClick = (id) => {
    setHoldsData((prevHolds) =>
      prevHolds.map((hold) =>
        hold.id === id
          ? {
              ...hold,
              state: getNextHoldState(hold.state),
            }
          : hold,
      ),
    );

    const newState = getNextHoldState(holdsData.find((hold) => hold.id === id).state);

    // Send the updated hold state to the connected peer
    if (connectionRef.current && connectionRef.current.open) {
      console.log("Sending", { holdId: id, state: newState });
      connectionRef.current.send({ holdId: id, state: newState });
    }
  };

  const getNextHoldState = (currentState) => {
    switch (currentState) {
      case holdStates.OFF:
        return holdStates.STARTING;
      case holdStates.STARTING:
        return holdStates.HAND;
      case holdStates.HAND:
        return holdStates.FOOT;
      case holdStates.FOOT:
        return holdStates.FINISH;
      default:
        return holdStates.OFF;
    }
  };

  return (
    <svg
      viewBox={`0 0 ${Object.values(imageDimensions)[0]?.width || 0} ${Object.values(imageDimensions)[0]?.height || 0}`}
    >
      {Object.keys(imagesToHolds).map((imageUrl) => (
        <image
          key={imageUrl}
          href={imageUrl}
          width={imageDimensions[imageUrl]?.width}
          height={imageDimensions[imageUrl]?.height}
        />
      ))}
      {holdsData.map((hold) => (
        <circle
          key={hold.id}
          id={`hold-${hold.id}`}
          data-mirror-id={hold.mirroredHoldId || undefined}
          cx={hold.cx}
          cy={hold.cy}
          r={hold.r}
          stroke={holdColours[hold.state]}
          strokeWidth={6}
          fillOpacity={0}
          onClick={editEnabled ? () => handleCircleClick(hold.id) : null}
        />
      ))}
    </svg>
  );
};

export default KilterBoard;
